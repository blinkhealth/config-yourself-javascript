version: 2
defaults: &defaults
  working_directory: ~/app
  docker:
    - image: circleci/node:8.12.0
      environment:
        NODE_ENV: development

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - config-yourself-ts-0-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update && sudo apt-get install -y build-essential
            NODE_ENV=development yarn install --frozen-lockfile
      - save_cache:
          key: config-yourself-ts-0-deps-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - /usr/local/share/.cache/yarn
            - ~/app/node_modules
      - run:
          name: Check formatting
          command: yarn lint:check
      - run:
          name: Run tests
          command: yarn test:coverage --ci
      - store_test_results:
          path: reports
          destination: reports
      - store_artifacts:
          path: reports/lcov-report
          destination: coverage

  publish:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - config-yourself-ts-0-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update && sudo apt-get install -y build-essential
            NODE_ENV=development yarn install --frozen-lockfile
      - run:
          name: Build package
          command: yarn build
      - run:
          name: Publish package
          command: |
            echo "Publishing version ${CIRCLE_TAG//v/}"
            yarn publish --tag "${CIRCLE_TAG//v/}"
      - run:
          name: Update git pages
          command: |
            yarn docs
            mv docs/ ../
            git checkout gh-pages
            rm -rf .
            mv ../docs/* .
            git add .
            git commit -m "Automated documentation generation for ${CIRCLE_TAG}"
            git push --force

workflows:
  version: 2
  feature:
    jobs:
      - test:
          filters: { branches: { ignore: [master] } }
  release_production:
    jobs:
      - publish:
          filters:
            branches: { ignore: /.*/ }
            tags: { only: /v.*/ }
